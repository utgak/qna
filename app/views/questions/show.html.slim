.answer-errors
  = render 'shared/errors', resource: @answer

p
  - if @question.subscribed?(current_user)
    =link_to 'Unsubscribe', unsubscribe_question_subscriptions_path(@question), method: :delete
  -else
    =link_to 'Subscribe', subscribe_question_subscriptions_path(@question), method: :post

h1= @question.title
p= @question.body

.files
  = render "file/file", resource: @question

.question_links
  p
  ul
    - @question.links.each do |link|
      .link-list data-link-id= link.id
        -if link.url.include? 'https://gist.github.com/'
          script src="#{link.url}.js"
        -else
          li
            = link_to link.name, link.url, target: :_blank
            -if can?(:destroy, link)
              = link_to 'delete link', link_path(link), method: :delete, remote: true

.reward
  - unless @reward.nil?
    p Reward:
    = @reward.name
    = image_tag(@reward.img)

.question_comments
  .errors
  p="Comments:"
  =render 'shared/errors', resource: @comment
  - @question.comments.each do |c|
    p= c.user.email
    p= c.body

.question_comments_form
  =render 'comments/form', commentable: @question

.answers
  p= "Answers:"
  = render @question.answers

= form_with model: [@question, @answer], class: "new-answer", local: false do |f|
  p
    = f.label :body, 'Give an answer'
    = f.text_area :body
  p
    = f.label :files
    = f.file_field :files, multiple: true, direct_upload: true

    h5 Links:
    #links
      = f.fields_for :links do |link|
        = render 'link_fields', f: link
      .links
        = link_to_add_association 'add link', f, :links
  = f.submit 'Answer'